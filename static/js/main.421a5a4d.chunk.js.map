{"version":3,"sources":["example/ExampleViewer.module.css","sign/Sign.module.css","sign/UnknownSign.module.css","model/HighwaySystem.ts","model/UsState.ts","sign/UnknownSign.tsx","sign/usState/UsStateSign.tsx","sign/Sign.tsx","example/ExampleViewer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","exampleSign","display","displayInner","sidebar","sidebarInner","sidebarElement","signWrapper","sign","HighwaySystem","UsState","UnknownSign","props","react_default","a","createElement","className","styles","viewBox","cx","cy","r","textAnchor","dominantBaseline","x","y","routeNumber","UsStateSign","RenderSign","system","STATE","Sign","ExampleViewer","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","INTERSTATE","undefined","onChangeSystem","bind","assertThisInitialized","onChangeRouteNumber","inherits","createClass","key","value","onChange","US_HIGHWAY","onChangeState","MICHIGAN","event","setState","target","React","Component","App","ExampleViewer_ExampleViewer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.421a5a4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"exampleSign\":\"ExampleViewer_exampleSign__EXpop\",\"display\":\"ExampleViewer_display__a2eQT\",\"displayInner\":\"ExampleViewer_displayInner__3wLOu\",\"sidebar\":\"ExampleViewer_sidebar__Temgt\",\"sidebarInner\":\"ExampleViewer_sidebarInner__2O4E2\",\"sidebarElement\":\"ExampleViewer_sidebarElement__1pjlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signWrapper\":\"Sign_signWrapper__Su1tr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sign\":\"UnknownSign_sign__2Dqwn\"};","export enum HighwaySystem {\n    INTERSTATE = \"interstate\",\n    US_HIGHWAY = \"us-highway\",\n    STATE = \"state\"\n}","export enum UsState {\n    MICHIGAN = \"michigan\"\n}","import {Props} from './Props';\nimport styles from './UnknownSign.module.css';\nimport React from 'react';\n\nexport function UnknownSign(props: Props) {\n    return <svg className={styles.sign} viewBox={'-500 -500 1000 1000'}>\n        <circle cx=\"0\" cy=\"0\" r=\"450\"/>\n\n        <text\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n            x=\"0\"\n            y=\"0\"\n        >\n            {props.routeNumber}\n        </text>\n    </svg>;\n}","import {Props} from '../Props';\n\nexport function UsStateSign(props: Props) {\n    return null;\n}","import React from 'react';\n\nimport styles from './Sign.module.css';\nimport {Props} from './Props';\nimport {HighwaySystem} from '../model/HighwaySystem';\nimport {UnknownSign} from './UnknownSign';\nimport {UsStateSign} from './usState/UsStateSign';\n\nfunction RenderSign(props: Props) {\n    switch(props.system) {\n        case HighwaySystem.STATE: {\n            return <UsStateSign {...props}/>\n        }\n        default: {\n            return <UnknownSign {...props}/>\n        }\n    }\n}\n\nexport function Sign(props: Props) {\n    return <div className={styles.signWrapper}>\n        <RenderSign {...props}/>\n    </div>;\n}","import React, {ChangeEvent} from 'react';\n\nimport {HighwaySystem} from '../model/HighwaySystem';\n\nimport styles from './ExampleViewer.module.css';\nimport {Sign} from '../sign/Sign';\nimport {UsState} from '../model/UsState';\n\ninterface State {\n    system: HighwaySystem\n    state?: UsState\n    routeNumber: string\n}\n\nexport class ExampleViewer extends React.Component<{}, State> {\n    state = {\n        system: HighwaySystem.INTERSTATE,\n        state: undefined,\n        routeNumber: '14'\n    };\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n\n        this.onChangeSystem = this.onChangeSystem.bind(this);\n        this.onChangeRouteNumber = this.onChangeRouteNumber.bind(this);\n    }\n\n    render() {\n        return <div className={styles.exampleSign}>\n            <div className={styles.display}>\n                <div className={styles.displayInner}>\n                    <Sign system={this.state.system} routeNumber={this.state.routeNumber}/>\n                </div>\n            </div>\n            <div className={styles.sidebar}>\n                <div className={styles.sidebarInner}>\n                    <div className={styles.sidebarElement}>\n                        <span>Highway System</span>\n                        <select value={this.state.system} onChange={this.onChangeSystem}>\n                            <option value={HighwaySystem.INTERSTATE}>Interstate</option>\n                            <option value={HighwaySystem.US_HIGHWAY}>U.S. Highway</option>\n                            <option value={HighwaySystem.STATE}>State</option>\n                        </select>\n                    </div>\n                    {\n                        this.state.system === HighwaySystem.STATE &&\n                        <div className={styles.sidebarElement}>\n                            <span>State</span>\n                            <select value={this.state.state} onChange={this.onChangeState}>\n                                <option value={UsState.MICHIGAN}>Michigan</option>\n                            </select>\n                        </div>\n                    }\n                    <div className={styles.sidebarElement}>\n                        <span>Route Number</span>\n                        <input value={this.state.routeNumber} onChange={this.onChangeRouteNumber}/>\n                    </div>\n                </div>\n            </div>\n        </div>;\n    }\n\n    private onChangeSystem(event: ChangeEvent<HTMLSelectElement>) {\n        this.setState({system: event.target.value as HighwaySystem});\n    }\n\n    private onChangeState(event: ChangeEvent<HTMLSelectElement>) {\n        this.setState({state: event.target.value as UsState});\n    }\n\n    private onChangeRouteNumber(event: ChangeEvent<HTMLInputElement>) {\n        this.setState({routeNumber: event.target.value});\n    }\n}","import React from 'react';\nimport {ExampleViewer} from './example/ExampleViewer';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <ExampleViewer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"typeface-overpass\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}