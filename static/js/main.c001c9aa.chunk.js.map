{"version":3,"sources":["example/ExampleViewer.module.css","sign/usState/michigan/MichiganStateSign.module.css","sign/Sign.module.css","sign/UnknownSign.module.css","model/HighwaySystem.ts","model/UsState.ts","sign/UnknownSign.tsx","sign/usState/michigan/MichiganStateSign.tsx","sign/usState/UsStateSign.tsx","sign/Sign.tsx","example/ExampleViewer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","exampleSign","display","displayInner","sidebar","sidebarInner","sidebarElement","signText","sign","backdrop","diamond","blockM","text3Digit","signWrapper","HighwaySystem","UsState","UnknownSign","props","react_default","a","createElement","className","styles","viewBox","cx","cy","r","textAnchor","dominantBaseline","x","y","routeNumber","MichiganStateSign","width","height","rx","ry","d","length","undefined","UsStateSign","state","MICHIGAN","RenderSign","system","STATE","Sign","ExampleViewer","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","INTERSTATE","onChangeSystem","bind","assertThisInitialized","onChangeState","onChangeRouteNumber","inherits","createClass","key","value","onChange","US_HIGHWAY","maxLength","event","setState","target","React","Component","App","ExampleViewer_ExampleViewer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c001c9aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"exampleSign\":\"ExampleViewer_exampleSign__EXpop\",\"display\":\"ExampleViewer_display__a2eQT\",\"displayInner\":\"ExampleViewer_displayInner__3wLOu\",\"sidebar\":\"ExampleViewer_sidebar__Temgt\",\"sidebarInner\":\"ExampleViewer_sidebarInner__2O4E2\",\"sidebarElement\":\"ExampleViewer_sidebarElement__1pjlD\",\"signText\":\"ExampleViewer_signText__13CGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sign\":\"MichiganStateSign_sign__1wq5l\",\"backdrop\":\"MichiganStateSign_backdrop__3YQFp\",\"diamond\":\"MichiganStateSign_diamond__5dgxz\",\"blockM\":\"MichiganStateSign_blockM__2M8cc\",\"text3Digit\":\"MichiganStateSign_text3Digit__16rQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signWrapper\":\"Sign_signWrapper__Su1tr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sign\":\"UnknownSign_sign__2Dqwn\"};","export enum HighwaySystem {\n    INTERSTATE = \"interstate\",\n    US_HIGHWAY = \"us-highway\",\n    STATE = \"state\"\n}","export enum UsState {\n    MICHIGAN = \"michigan\"\n}","import {Props} from './Props';\nimport styles from './UnknownSign.module.css';\nimport React from 'react';\n\nexport function UnknownSign(props: Props) {\n    return <svg className={styles.sign} viewBox={'-500 -500 1000 1000'}>\n        <circle cx=\"0\" cy=\"0\" r=\"450\"/>\n\n        <text\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n            x=\"0\"\n            y=\"0\"\n        >\n            {props.routeNumber}\n        </text>\n    </svg>;\n}","import {Props} from '../../Props';\nimport React from 'react';\n\nimport styles from './MichiganStateSign.module.css';\n\nexport function MichiganStateSign(props: Props) {\n    return <svg className={styles.sign} viewBox={'-512 -512 1024 1024'}>\n        <rect className={styles.backdrop} x=\"-512\" y=\"-512\" width=\"1024\" height=\"1024\" rx=\"64\" ry=\"64\"/>\n        <rect className={styles.diamond}\n              x=\"-346\"\n              y=\"-346\"\n              width=\"686\"\n              height=\"686\"\n        />\n\n        <path\n            className={styles.blockM}\n            d=\"M 0,0\n            m 0,-210\n            52,-52\n            0,60\n            -15,0\n            0,40\n            64,0\n            0,-40\n            -15,0\n            0,-72\n            15,0\n            0,-40\n            -50, 0\n            -52,52\n            -52,-52\n            -50,0\n            0,40\n            15,0\n            0,72\n            -15,0\n            0,40\n            64,0\n            0,-40\n            -15,0\n            0,-60\n            52,52\n            z\"\n        />\n\n        <text\n            className={props.routeNumber.length > 2 ? styles.text3Digit : undefined}\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n            x=\"0\"\n            y=\"100\"\n        >\n            {props.routeNumber}\n        </text>\n    </svg>;\n}","import React from 'react';\n\nimport {UsState} from '../../model/UsState';\nimport {UnknownSign} from '../UnknownSign';\nimport {MichiganStateSign} from './michigan/MichiganStateSign';\n\nimport {Props} from '../Props';\n\nexport function UsStateSign(props: Props) {\n    switch (props.state) {\n        case UsState.MICHIGAN:\n            return <MichiganStateSign {...props}/>;\n        default:\n            return <UnknownSign {...props}/>;\n    }\n}","import React from 'react';\n\nimport styles from './Sign.module.css';\nimport {Props} from './Props';\nimport {HighwaySystem} from '../model/HighwaySystem';\nimport {UnknownSign} from './UnknownSign';\nimport {UsStateSign} from './usState/UsStateSign';\n\nfunction RenderSign(props: Props) {\n    switch(props.system) {\n        case HighwaySystem.STATE: {\n            return <UsStateSign {...props}/>\n        }\n        default: {\n            return <UnknownSign {...props}/>\n        }\n    }\n}\n\nexport function Sign(props: Props) {\n    return <div className={styles.signWrapper}>\n        <RenderSign {...props}/>\n    </div>;\n}","import React, {ChangeEvent} from 'react';\n\nimport {HighwaySystem} from '../model/HighwaySystem';\n\nimport styles from './ExampleViewer.module.css';\nimport {Sign} from '../sign/Sign';\nimport {UsState} from '../model/UsState';\n\ninterface State {\n    system: HighwaySystem\n    state?: UsState\n    routeNumber: string\n}\n\nexport class ExampleViewer extends React.Component<{}, State> {\n    state = {\n        system: HighwaySystem.INTERSTATE,\n        state: undefined,\n        routeNumber: ''\n    };\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n\n        this.onChangeSystem = this.onChangeSystem.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeRouteNumber = this.onChangeRouteNumber.bind(this);\n    }\n\n    render() {\n        return <div className={styles.exampleSign}>\n            <div className={styles.display}>\n                <div className={styles.displayInner}>\n                    <Sign system={this.state.system} routeNumber={this.state.routeNumber} state={this.state.state}/>\n                </div>\n            </div>\n            <div className={styles.sidebar}>\n                <div className={styles.sidebarInner}>\n                    <div className={styles.sidebarElement}>\n                        <span className={styles.signText}>HIGHWAY SYSTEM</span>\n                        <select value={this.state.system} onChange={this.onChangeSystem}>\n                            <option value={HighwaySystem.INTERSTATE}>Interstate</option>\n                            <option value={HighwaySystem.US_HIGHWAY}>U.S. Highway</option>\n                            <option value={HighwaySystem.STATE}>State</option>\n                        </select>\n                    </div>\n                    {\n                        this.state.system === HighwaySystem.STATE &&\n                        <div className={styles.sidebarElement}>\n                            <span className={styles.signText}>STATE</span>\n                            <select value={this.state.state} onChange={this.onChangeState}>\n                                <option value={undefined}>-</option>\n                                <option value={UsState.MICHIGAN}>Michigan</option>\n                            </select>\n                        </div>\n                    }\n                    <div className={styles.sidebarElement}>\n                        <span className={styles.signText}>ROUTE NUMBER</span>\n                        <input value={this.state.routeNumber} onChange={this.onChangeRouteNumber} maxLength={3}/>\n                    </div>\n                </div>\n            </div>\n        </div>;\n    }\n\n    private onChangeSystem(event: ChangeEvent<HTMLSelectElement>) {\n        this.setState({system: event.target.value as HighwaySystem});\n    }\n\n    private onChangeState(event: ChangeEvent<HTMLSelectElement>) {\n        this.setState({state: event.target.value as UsState});\n    }\n\n    private onChangeRouteNumber(event: ChangeEvent<HTMLInputElement>) {\n        this.setState({routeNumber: event.target.value});\n    }\n}","import React from 'react';\nimport {ExampleViewer} from './example/ExampleViewer';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <ExampleViewer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"typeface-overpass\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}